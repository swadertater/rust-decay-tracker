// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@use 'bootstrap' as *;
@use 'rust-red-palette' as *;
@use 'rust-gray-palette' as *;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$rust-decay-tracker-primary: mat.define-palette($rust-gray-palette);
$rust-decay-tracker-accent: mat.define-palette($rust-red-palette);

// The warn palette is optional (defaults to red).
$rust-decay-tracker-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$rust-decay-tracker-theme: mat.define-light-theme((
  color: (
    primary: $rust-decay-tracker-primary,
    accent: $rust-decay-tracker-accent,
    warn: $rust-decay-tracker-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($rust-decay-tracker-theme);

/* You can add global styles to this file, and also import other style files */

html, body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

.mat-app-background {
  color: mat.get-color-from-palette($rust-decay-tracker-theme, 'lighter-contrast');
  background: mat.get-color-from-palette($rust-decay-tracker-theme, 'ligher');
}

.blink {
  animation-name: blink-animation;
  animation-duration: 1s;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
}

@keyframes blink-animation {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

